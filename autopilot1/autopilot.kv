#:kivy 1.0.9
#:import sin math.sin
#:import cos math.cos
#:import radians math.radians

<RadarPulse>:  
    canvas:
        Color:
            rgb: 1, 0, 0
        Line:
            width: 2.0
            circle: (self.center_x, self.center_y, self.distance, self.angle - 1, self.angle + 1)

<LeftCommands>:
    lbl_port: port
    lbl_log: log
    lbl_command: command
    orientation: 'vertical'
    GridLayout:
        cols: 3
        size_hint: 1, 1
        Label:
            size_hint: 1, 0.1
            text: 'D'
        Label:
            size_hint: 1, 0.1
            text: '%i %%' % app.target_speed_A
        Label:
            size_hint: 1, 0.1
            text: '%i %%' % app.speed_A

        Slider:
            id: slider_motor_dir
            orientation: 'vertical'
            max: 1
            min: 0
            step: 2
            value: app.dir_A
            on_value: app.dir_A = args[1]
        Slider:
            id: slider_motor_target
            orientation: 'vertical'
            max: 100
            value: app.target_speed_A
            on_value: app.target_speed_A = args[1]

        Slider:
            id: slider_motor_actual
            orientation: 'vertical'
            disabled: True
            max: 100
            value: app.speed_A
        
        Label:
            size_hint: 1, 0.1
            text: 'R'
            
    Label:
        id: port
        size_hint: 1, None
        heigth: 20
        font_size: 15  
        text: app.port
        text_size: self.size

    Label:
        id: command
        size_hint: 1, None
        heigth: 20
        font_size: 15  
        text: app.last_command
        text_size: self.size
        
    Label:
        id: log
        size_hint: 1, 1
        font_size: 15  
        text: app.loglines_text
        text_size: self.size
        

    
<BottomCommands>:
    BoxLayout:
        padding: 20
        spacing: 10
        orientation: 'horizontal'
        Button:
            size_hint: 0.5, 1
            text: "Brake"
            state: "down" if app.brake_A else "normal"
            on_state: app.brake_A = 1 if args[1]=="down" else 0
        ToggleButton:
            size_hint: 0.5, 1
            text: "Auto"
            state: app.auto
            on_state: app.auto = args[1]
        Label:
            size_hint: 0.1, 1
            text: '%i Â°' % app.cur_steering
        Slider:
            id: slider_steer
            orientation: 'horizontal'
            max: 55
            min: -55
            value: app.cur_steering
            on_value: app.cur_steering = args[1]
            size_hint: 1, 1


<RadarGrid>:
    canvas:
        Color:
            rgb: 0, 1, 0
        Line:
            width: 1.0
            circle: (self.center_x, 120, root.width/2/4*3, -90, 90)
        Line:
            width: 1.0
            circle: (self.center_x,  120, root.width/2/4*2, -90, 90)
        Line:
            width: 1.0
            circle: (self.center_x,  120, root.width/2/4*1, -90, 90)
        Line:
            width: 1.0
            circle: (self.center_x,  120, root.width/2, -90, 90)
        Line:
            width: 1.0
            points: (self.center_x -root.width/2,  120, self.center_x +root.width/2, 120)
        Line:
            width: 1.0
            points: (self.center_x,  120, self.center_x, root.width/2 + 120)
        Line:
            width: 1.0
            points: (self.center_x,  120, self.center_x + root.width/2 * sin(radians(45)), 120 + root.width/2 * cos(radians(45)))
        Line:
            width: 1.0
            points: (self.center_x,  120, self.center_x + root.width/2 * sin(radians(-45)), 120 + root.width/2 * cos(radians(-45)))
        Line:
            width: 1.0
            points: (self.center_x,  120, self.center_x + root.width/2 * sin(radians(70)), 120 + root.width/2 * cos(radians(70)))
        Line:
            width: 1.0
            points: (self.center_x,  120, self.center_x + root.width/2 * sin(radians(-70)), 120 + root.width/2 * cos(radians(-70)))
        

<AutopilotPage>:
    radarGrid: radarGrid
    leftCommands: leftCommands
    bottomCommands: bottomCommands
    
    padding: 20
    spacing: 10
    orientation: 'horizontal'
    
    LeftCommands:
        id: leftCommands
        size_hint: None, 1
        width: 200
    BoxLayout:
        orientation: 'vertical'
        size_hint: 1, 1
        GridLayout:
            size_hint: 1, 1
            cols: 2
            Label:
                text: 'Strategy: %s' % app.strategy
            Label:
                text: 'time: %i' % app.strategyTime
            Label:
                text: 'Strategy Step: %s' % app.strategyStep
            Label:
                text: 'time: %i' % app.strategyStepTime
            Label:
                text: 'Distance: %s' % app.distance
            Label:
                text: 'Strategy Lock: %s' % app.strategyLock
            Label:
                text: 'Brake: %i' % app.brake_A
            Label:
                text: 'Current: %s' % app.current
            Label:
                text: 'Last Comm Cicles: %s' % app.lastCommCicles
            Label:
                text: 'Last Comm time: %s' % app.lastCommTime
        RadarGrid:
            id: radarGrid
            size_hint: 1, 1
    
        BottomCommands:
            id: bottomCommands
            size_hint: 1, None
            heigth: 50
